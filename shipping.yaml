- name: shipping
  hosts: shipping
  become: yes
  vars:
   mysql_password: Roboshop@1
  tasks:
  - name: installing maven
    ansible.builtin.dnf: 
     name: maven
     state: present
  - name: adding roboshop user
    ansible.builtin.user:
     name: roboshop
  - name: recursively removing app directory
    ansible.builtin.file:
     path: /app
     state: absent
  - name: creating app directory
    ansible.builtin.file:
     path: /app
     state: directory
  - name: downloading shipping code
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
     dest: /tmp/shipping.zip
  - name: unzipping shipping code
    ansible.builtin.unarchive:
     src: /tmp/shipping.zip
     dest: /app
     remote_src: yes
  - name: installing dependancies
    ansible.builtin.command: mvn clean package
    args:
     chdir: /app
  - name: renaming shipping.jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
     chdir: /app
  - name: copying shipping.service
    ansible.builtin.copy:
     src: shipping.service
     dest: /etc/systemd/system/shipping.service
  - name: reloading daemon
    ansible.builtin.systemd_service:
     name: shipping
     daemon_reload: true
     
  - name: installing mysql
    ansible.builtin.dnf:
     name: mysql
     state: present
  - name: check cities schema exists or not
    ansible.builtin.command: mysql -h mysql.sowjanyaaws.xyz -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='cities'"
    register: schema
  - name: print output
    ansible.builtin.debug:
     msg: "schema output: {{schema}}"
  - name: load cities data
    ansible.builtin.shell: "mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -p{{mysql_password}} < /app/schema/shipping.sql"

  - name: start and enable shipping
    ansible.builtin.service:
     name: shipping
     state: restarted
     enabled: yes

